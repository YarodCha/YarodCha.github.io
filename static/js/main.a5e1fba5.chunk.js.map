{"version":3,"sources":["components/Footer.jsx","components/Home.jsx","components/Contact.jsx","components/About.jsx","components/Portfolio.jsx","pages/GithubCardsApp.jsx","pages/StarMatchGame.jsx","App.js","reportWebVitals.js","index.js"],"names":["Footer","useState","window","matchMedia","matches","darkMode","setDarkMode","activeClassName","exact","to","className","type","name","id","checked","onChange","document","body","htmlFor","Home","style","margin","Contact","href","About","age","Date","getUTCFullYear","Portfolio","projects","data","mediaQuery","map","project","listLanguages","languages","split","link","startsWith","target","rel","title","length","replace","GithubCardsApp","state","profiles","addNewProfile","profileData","setState","prevState","onSubmit","this","Component","Card","profile","props","src","avatar_url","alt","height","company","CardList","key","Form","userName","handleSubmit","event","a","preventDefault","axios","get","response","console","error","message","display","textAlign","placeholder","value","required","Game","utils","random","stars","setStars","range","availableNumbers","setAvailableNumbers","candidateNumbers","setCandidateNumbers","secondsLeft","setSecondsLeft","useEffect","timerId","setTimeout","clearTimeout","log","setGameState","newCandidateNumbers","sum","newAvailableNumbers","filter","number","includes","randomSumIn","useGameState","candidatesAreWrong","gameStatus","numberStatus","onNumberClick","currentStatus","concat","num","onClick","startNewGame","count","status","PlayAgain","color","NumberButton","backgroundColor","colors","StarsDisplay","starId","StarMatchGame","gameId","setGameId","available","used","wrong","candidate","arr","reduce","acc","curr","min","max","Array","from","_","i","Math","floor","sets","sums","j","len","candidateSet","candidateSum","push","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a5e1fba5.chunk.js","sourcesContent":["import './Footer.css';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nexport default function Footer() {\r\n  const [darkMode, setDarkMode] = useState(window.matchMedia('(prefers-color-scheme: dark)').matches)\r\n  \r\n  function handleChangeDarkMode() {\r\n    !darkMode ?\r\n            document.body.className = 'is-dark-mode' :\r\n            document.body.className = ''\r\n    setDarkMode(!darkMode)\r\n  }\r\n\r\n  return (\r\n    <footer>\r\n      <nav>\r\n        <NavLink activeClassName=\"activeLink\" exact={true} to=\"/\">HOME</NavLink>\r\n        <NavLink activeClassName=\"activeLink\" to=\"/about\">ABOUT</NavLink>\r\n        <NavLink activeClassName=\"activeLink\" to=\"/portfolio\">PORTFOLIO</NavLink>\r\n        <NavLink activeClassName=\"activeLink\" to=\"/contact\">CONTACT</NavLink>\r\n      </nav>\r\n      <div className=\"dark-mode\">\r\n        <input type=\"checkbox\" \r\n          className=\"checkbox\" \r\n          name=\"theme\" \r\n          id=\"theme\"\r\n          checked={darkMode}\r\n          onChange={handleChangeDarkMode} />\r\n        <label htmlFor=\"theme\" className=\"switch\"> Dark mode</label>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","import './Home.css';\r\nimport { Link } from 'react-router-dom';\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"contenedor\">\r\n      <h1>\r\n        Hello. I'm{' '}\r\n        <span id=\"myName\">\r\n          Yarod Chanca\r\n        </span>\r\n        . I'm a full-stack javascript developer\r\n      </h1>\r\n      <Link\r\n        to=\"/portfolio\"\r\n        style={{ margin: '0px' }}\r\n      >\r\n        <button>View my work -&gt;</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","export default function Contact() {\r\n  return (\r\n    <div>\r\n      <h1>Contact me</h1>\r\n      <p>Email: <a href=\"mailto:yarod.chanca@outlook.com\">yarod.chanca@outlook.com</a></p>\r\n    </div>\r\n  );\r\n}\r\n","export default function About() {\r\n  const age = new Date().getUTCFullYear() - 1997;\r\n  return (\r\n    <div>\r\n      <h1>About me</h1>\r\n      <p>I'm {age} years old.</p>\r\n      <p> I ❤ JS</p>\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from 'react-router-dom';\r\nimport data from '../assets/data.json';\r\n\r\nexport default function Portfolio() {\r\n  let projects = data.projects;\r\n  const mediaQuery = window.matchMedia('(max-width: 420px)');\r\n\r\n  function generateProjectListElement(project) {\r\n    const listLanguages = project.languages.split(',');\r\n    return (\r\n      <li key={project.title}>\r\n        {project.link.startsWith('http') ? (\r\n          <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {project.title}\r\n          </a>\r\n        ) : (\r\n          <Link to={project.link}> {project.title} </Link>\r\n        )}\r\n        <small>\r\n          {' '}\r\n          {mediaQuery.matches\r\n            ? listLanguages[listLanguages.length - 1]\r\n            : project.languages.replace(/,/g, ', ')}\r\n        </small>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Portfolio</h1>\r\n      <ul>{projects.map(generateProjectListElement)}</ul>\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\n\r\nimport './GithubCardsApp.css';\r\n\r\nexport default class GithubCardsApp extends Component {\r\n  state = {\r\n    profiles: [],\r\n  };\r\n\r\n  addNewProfile = (profileData) => {\r\n    this.setState((prevState) => ({\r\n      profiles: [...prevState.profiles, profileData],\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Github Cards App</h1>\r\n        <Form onSubmit={this.addNewProfile} />\r\n        <CardList profiles={this.state.profiles} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Card extends Component {\r\n  render() {\r\n    const profile = this.props;\r\n    return (\r\n      <div className=\"github-profile\">\r\n        <img src={profile.avatar_url} alt=\"placeholder\" height=\"75px\" />\r\n        <div className=\"info\">\r\n          <div className=\"name\"> {profile.name} </div>\r\n          <div className=\"company\"> {profile.company} </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst CardList = ({ profiles }) => (\r\n  <div>\r\n    {profiles.map((profile) => (\r\n      <Card {...profile} key={profile.id} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    userName: '',\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.github.com/users/${this.state.userName}`\r\n      );\r\n      this.props.onSubmit(response.data);\r\n      this.setState({ userName: '' });\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div style={{display: 'inline-block'}}>\r\n          <label style={{display: 'block', textAlign: 'left'}} htmlFor=\"username\">Username</label>\r\n          <input style={{display: 'block'}}\r\n            type=\"text\"\r\n            id=\"username\"\r\n            placeholder=\"Github username\"\r\n            value={this.state.userName}\r\n            onChange={(event) => this.setState({ userName: event.target.value })}\r\n            required\r\n          />\r\n        </div>\r\n        <button className=\"button\">Add card</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport './StarMatchGame.css';\r\n\r\nconst useGameState = () => {\r\n  const [stars, setStars] = useState(utils.random(1, 9));\r\n  const [availableNumbers, setAvailableNumbers] = useState(utils.range(1, 9));\r\n  const [candidateNumbers, setCandidateNumbers] = useState([]);\r\n  const [secondsLeft, setSecondsLeft] = useState(10);\r\n\r\n  useEffect(() => {\r\n    if (secondsLeft > 0 && availableNumbers.length > 0) {\r\n      const timerId = setTimeout(() => {\r\n        setSecondsLeft(secondsLeft - 1);\r\n      }, 1000);\r\n      return () => {\r\n        clearTimeout(timerId);\r\n      };\r\n    }\r\n    console.log('Rendering');\r\n    return () => {\r\n      console.log('Destroying');\r\n    };\r\n  });\r\n\r\n  const setGameState = (newCandidateNumbers) => {\r\n    if (utils.sum(newCandidateNumbers) !== stars) {\r\n      setCandidateNumbers(newCandidateNumbers);\r\n    } else {\r\n      const newAvailableNumbers = availableNumbers.filter(\r\n        (number) => !newCandidateNumbers.includes(number)\r\n      );\r\n      setAvailableNumbers(newAvailableNumbers);\r\n      setCandidateNumbers([]);\r\n      setStars(utils.randomSumIn(newAvailableNumbers, 9));\r\n    }\r\n  };\r\n\r\n  return {\r\n    stars,\r\n    availableNumbers,\r\n    candidateNumbers,\r\n    secondsLeft,\r\n    setGameState,\r\n  };\r\n};\r\n\r\nconst Game = (props) => {  \r\n  const {\r\n    stars,\r\n    availableNumbers,\r\n    candidateNumbers,\r\n    secondsLeft,\r\n    setGameState,\r\n  } = useGameState();\r\n\r\n  const candidatesAreWrong = utils.sum(candidateNumbers) > stars;\r\n  const gameStatus =\r\n    availableNumbers.length === 0\r\n      ? 'won'\r\n      : secondsLeft === 0\r\n      ? 'lost'\r\n      : 'active';\r\n\r\n  const numberStatus = (number) => {\r\n    if (!availableNumbers.includes(number)) {\r\n      return 'used';\r\n    }\r\n    if (candidateNumbers.includes(number)) {\r\n      return candidatesAreWrong ? 'wrong' : 'candidate';\r\n    }\r\n    return 'available';\r\n  };\r\n\r\n  const onNumberClick = (number, currentStatus) => {\r\n    if (gameStatus !== 'active' || currentStatus === 'used') {\r\n      return;\r\n    }\r\n\r\n    const newCandidateNumbers =\r\n      currentStatus === 'available'\r\n        ? candidateNumbers.concat(number)\r\n        : candidateNumbers.filter((num) => num !== number);\r\n\r\n    setGameState(newCandidateNumbers);\r\n  };\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <h1>Star Match Game</h1>\r\n      <div className=\"help\">\r\n        Pick 1 or more numbers that sum to the number of stars\r\n      </div>\r\n      <div className=\"body\">\r\n        <div className=\"left\">\r\n          {gameStatus !== 'active' ? (\r\n            <PlayAgain onClick={props.startNewGame} gameStatus={gameStatus} />\r\n          ) : (\r\n            <StarsDisplay count={stars} />\r\n          )}\r\n        </div>\r\n        <div className=\"right\">\r\n          {utils.range(1, 9).map((number) => (\r\n            <NumberButton\r\n              key={number}\r\n              number={number}\r\n              status={numberStatus(number)}\r\n              onClick={onNumberClick}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"timer\">Time Remaining: {secondsLeft}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PlayAgain = ({ onClick, gameStatus }) => {\r\n  return (\r\n    <div className=\"game-done\">\r\n      <div\r\n        className=\"message\"\r\n        style={{ color: gameStatus === 'won' ? 'green' : 'red' }}\r\n      >\r\n        {gameStatus === 'won' ? 'Nice' : 'Game Over'}\r\n      </div>\r\n      <button onClick={() => onClick()}>Play again</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NumberButton = ({ number, onClick, status }) => {\r\n  return (\r\n    <button\r\n      className=\"number\"\r\n      style={{ backgroundColor: colors[status] }}\r\n      onClick={() => onClick(number, status)}\r\n    >\r\n      {number}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst StarsDisplay = ({ count }) => {\r\n  return (\r\n    <>\r\n      {utils.range(1, count).map((starId) => (\r\n        <div className=\"star\" key={starId} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst StarMatchGame = () => {\r\n  const [gameId, setGameId] = useState(1);\r\n  return <Game key={gameId} startNewGame={() => setGameId(gameId + 1)} />;\r\n};\r\n\r\nexport default StarMatchGame;\r\n\r\n// Color Theme\r\nconst colors = {\r\n  available: 'lightgray',\r\n  used: 'lightgreen',\r\n  wrong: 'lightcoral',\r\n  candidate: 'deepskyblue',\r\n};\r\n\r\n// Math science\r\nconst utils = {\r\n  // Sum an array\r\n  sum: (arr) => arr.reduce((acc, curr) => acc + curr, 0),\r\n\r\n  // create an array of numbers between min and max (edges included)\r\n  range: (min, max) => Array.from({ length: max - min + 1 }, (_, i) => min + i),\r\n\r\n  // pick a random number between min and max (edges included)\r\n  random: (min, max) => min + Math.floor(Math.random() * (max - min + 1)),\r\n\r\n  // Given an array of numbers and a max...\r\n  // Pick a random sum (< max) from the set of all available sums in arr\r\n  randomSumIn: (arr, max) => {\r\n    const sets = [[]];\r\n    const sums = [];\r\n    for (let i = 0; i < arr.length; i++) {\r\n      for (let j = 0, len = sets.length; j < len; j++) {\r\n        const candidateSet = sets[j].concat(arr[i]);\r\n        const candidateSum = utils.sum(candidateSet);\r\n        if (candidateSum <= max) {\r\n          sets.push(candidateSet);\r\n          sums.push(candidateSum);\r\n        }\r\n      }\r\n    }\r\n    return sums[utils.random(0, sums.length - 1)];\r\n  },\r\n};\r\n","import Footer from './components/Footer'\r\nimport Home from './components/Home'\r\nimport Contact from './components/Contact'\r\nimport About from './components/About'\r\nimport Portfolio from './components/Portfolio'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nimport './App.css'\r\nimport GithubCardsApp from './pages/GithubCardsApp'\r\nimport StarMatchGame from './pages/StarMatchGame'\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <main className=\"home\">\r\n          <Switch>\r\n            <Route path=\"/about\">\r\n              <About />\r\n            </Route>\r\n            <Route path=\"/portfolio\">\r\n              <Portfolio />\r\n            </Route>\r\n            <Route path=\"/contact\">\r\n              <Contact />\r\n            </Route>\r\n            <Route path=\"/GithubCardsApp\">\r\n              <GithubCardsApp />\r\n            </Route>\r\n            <Route path=\"/StarMatchGame\">\r\n              <StarMatchGame />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n        <Footer></Footer>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nwindow.matchMedia('(prefers-color-scheme: dark)').matches\n  ? document.body.className = 'is-dark-mode' :\n    document.body.className = ''\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}